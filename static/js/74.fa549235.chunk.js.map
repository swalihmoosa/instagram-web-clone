{"version":3,"file":"static/js/74.fa549235.chunk.js","mappings":"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","sources":["components/screens/ExploreSingleScreen.jsx"],"sourcesContent":["import {\n    faBookmark,\n    faComment,\n    faEllipsis,\n    faFaceSmile,\n    faShare,\n    faHeart,\n    faClose,\n    faAngleLeft,\n    faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { UserContext } from \"../../App\";\nimport explores from \"../../assets/json/explores\";\nimport useWindowDimensions from \"../hooks/UseWindowDimensions\";\n\nexport default function ExploreSingleScreen() {\n    const { id } = useParams();\n    const { height } = useWindowDimensions();\n    const { userActions } = useContext(UserContext);\n    const [likedComments, setLikedComments] = useState([]);\n    const [newlikedComments, setNewLikedComments] = useState([]);\n    const [isLiked, setIsLiked] = useState(false);\n    const [isSaved, setIsSaved] = useState(false);\n    const [explorePostCount, setExplorePostCount] = useState(0);\n    const [newComment, setNewComment] = useState(\"\");\n    const [newComments, setNewComments] = useState([]);\n\n    const exploreRender = () => {\n        if (typeof explores[id - 1].explore_data === \"string\") {\n            if (\n                (explores[id - 1].explore_data.includes(\"jpeg\") ||\n                    explores[id - 1].explore_data.includes(\"jpg\") ||\n                    explores[id - 1].explore_data.includes(\"png\") ||\n                    explores[id - 1].explore_data.includes(\"photo\") ||\n                    explores[id - 1].explore_data.includes(\"gif\")) === true\n            ) {\n                return <img src={explores[id - 1].explore_data} alt=\"Post\" />;\n            } else {\n                return (\n                    <ReactPlayer\n                        url={explores[id - 1].explore_data}\n                        playing={true}\n                        loop={true}\n                    />\n                );\n            }\n        }\n        if (typeof explores[id - 1].explore_data === \"object\") {\n            if (\n                (explores[id - 1].explore_data[explorePostCount].data.includes(\n                    \"jpeg\"\n                ) ||\n                    explores[id - 1].explore_data[\n                        explorePostCount\n                    ].data.includes(\"jpg\") ||\n                    explores[id - 1].explore_data[\n                        explorePostCount\n                    ].data.includes(\"png\") ||\n                    explores[id - 1].explore_data[\n                        explorePostCount\n                    ].data.includes(\"photo\") ||\n                    explores[id - 1].explore_data[\n                        explorePostCount\n                    ].data.includes(\"gif\")) === true\n            ) {\n                return (\n                    <img\n                        src={\n                            explores[id - 1].explore_data[explorePostCount].data\n                        }\n                        alt=\"Post\"\n                    />\n                );\n            } else {\n                return (\n                    <ReactPlayer\n                        url={\n                            explores[id - 1].explore_data[explorePostCount].data\n                        }\n                        playing={true}\n                        loop={true}\n                    />\n                );\n            }\n        }\n    };\n\n    const newCommentPost = () => {\n        setNewComments([\n            ...newComments,\n            {\n                id: newComments.length + 1,\n                comment: newComment,\n                user: userActions.user.username,\n                avatar: userActions.user.avatar,\n                time: \"now\",\n                likes: 0,\n            },\n        ]);\n        setNewComment(\"\");\n    };\n\n    return (\n        <Container style={{ minHeight: height }}>\n            <section className=\"wrapper\">\n                <Left style={{ maxHeight: height - 60, height: height }}>\n                    {exploreRender()}\n                </Left>\n                <Right style={{ maxHeight: height - 60 }}>\n                    <Head>\n                        <Avatar>\n                            <img\n                                src={explores[id - 1].profile_image}\n                                alt=\"Avatar\"\n                            />\n                        </Avatar>\n                        <Name>{explores[id - 1].username} . </Name>\n                        <Follow>Follow</Follow>\n                        <FontAwesomeIcon icon={faEllipsis} className=\"icon\" />\n                    </Head>\n                    <CommentsUl>\n                        {newComments.length > 0\n                            ? newComments.map((newcomment) => (\n                                  <CommentLi key={newcomment.id}>\n                                      <Avatar>\n                                          <img\n                                              src={newcomment.avatar}\n                                              alt=\"Avatar\"\n                                          />\n                                      </Avatar>\n                                      <NameComment>\n                                          <p>\n                                              <b>{newcomment.user}</b>{\" \"}\n                                              {newcomment.comment}\n                                          </p>\n                                          <LikeContainer>\n                                              <Time>{newcomment.time}</Time>\n                                              <Like>\n                                                  {newlikedComments.includes(\n                                                      newcomment.id\n                                                  )\n                                                      ? newcomment.likes + 1\n                                                      : newcomment.likes}{\" \"}\n                                                  likes\n                                              </Like>\n                                              <Reply>Reply</Reply>\n                                          </LikeContainer>\n                                      </NameComment>\n                                      <FontAwesomeIcon\n                                          icon={faHeart}\n                                          onClick={() =>\n                                              setNewLikedComments([\n                                                  ...newlikedComments,\n                                                  newcomment.id,\n                                              ])\n                                          }\n                                          className={\n                                              newlikedComments.includes(\n                                                  newcomment.id\n                                              )\n                                                  ? \"icon liked\"\n                                                  : \"icon\"\n                                          }\n                                      />\n                                  </CommentLi>\n                              ))\n                            : \"\"}\n                        {explores[id - 1].comments.map((comment) => (\n                            <CommentLi key={comment.id}>\n                                <Avatar>\n                                    <img src={comment.avatar} alt=\"Avatar\" />\n                                </Avatar>\n                                <NameComment>\n                                    <p>\n                                        <b>{comment.user}</b> {comment.comment}\n                                    </p>\n                                    <LikeContainer>\n                                        <Time>{comment.time}</Time>\n                                        <Like>\n                                            {likedComments.includes(comment.id)\n                                                ? comment.likes + 1\n                                                : comment.likes}{\" \"}\n                                            likes\n                                        </Like>\n                                        <Reply>Reply</Reply>\n                                    </LikeContainer>\n                                </NameComment>\n                                <FontAwesomeIcon\n                                    icon={faHeart}\n                                    onClick={() => {\n                                        if (\n                                            likedComments.includes(comment.id)\n                                        ) {\n                                            let filteredArray =\n                                                likedComments.filter(\n                                                    (likedComment) =>\n                                                        likedComment !==\n                                                        comment.id\n                                                );\n                                            setLikedComments(filteredArray);\n                                        } else {\n                                            setLikedComments([\n                                                ...likedComments,\n                                                comment.id,\n                                            ]);\n                                        }\n                                    }}\n                                    className={\n                                        likedComments.includes(comment.id)\n                                            ? \"icon liked\"\n                                            : \"icon\"\n                                    }\n                                />\n                            </CommentLi>\n                        ))}\n                    </CommentsUl>\n                    <ExploreFooter>\n                        <FontAwesomeIcon\n                            icon={faHeart}\n                            className={isLiked ? \"icon liked\" : \"icon\"}\n                            onClick={() => setIsLiked(!isLiked)}\n                        />\n                        <FontAwesomeIcon icon={faComment} className=\"icon\" />\n                        <FontAwesomeIcon icon={faShare} className=\"icon\" />\n                        <FontAwesomeIcon\n                            icon={faBookmark}\n                            className={\n                                isSaved ? \"icon share shared\" : \"icon share\"\n                            }\n                            onClick={() => setIsSaved(!isSaved)}\n                        />\n                    </ExploreFooter>\n                    <Likes>\n                        {isLiked\n                            ? explores[id - 1].likes + 1\n                            : explores[id - 1].likes}{\" \"}\n                        likes\n                    </Likes>\n                    <CommentDiv>\n                        <FontAwesomeIcon icon={faFaceSmile} className=\"icon\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                        <Post onClick={newCommentPost}>Post</Post>\n                    </CommentDiv>\n                </Right>\n                <ResponsiveDiv className=\"responsive-div\">\n                    <Head>\n                        <Avatar>\n                            <img\n                                src={explores[id - 1].profile_image}\n                                alt=\"Avatar\"\n                            />\n                        </Avatar>\n                        <Name>{explores[id - 1].username} . </Name>\n                        <Follow>Follow</Follow>\n                        <FontAwesomeIcon icon={faEllipsis} className=\"icon\" />\n                    </Head>\n                    <Left\n                        className=\"responsive-div\"\n                        style={{ maxHeight: height - 60, height: \"500px\" }}\n                    >\n                        {exploreRender()}\n                    </Left>\n                    <ExploreFooter className=\"responsive-div\">\n                        <FontAwesomeIcon\n                            icon={faHeart}\n                            className={isLiked ? \"icon liked\" : \"icon\"}\n                            onClick={() => setIsLiked(!isLiked)}\n                        />\n                        <FontAwesomeIcon icon={faComment} className=\"icon\" />\n                        <FontAwesomeIcon icon={faShare} className=\"icon\" />\n                        <FontAwesomeIcon\n                            icon={faBookmark}\n                            className={\n                                isSaved ? \"icon share shared\" : \"icon share\"\n                            }\n                            onClick={() => setIsSaved(!isSaved)}\n                        />\n                    </ExploreFooter>\n                    <Likes className=\"responsive-div\">\n                        {isLiked\n                            ? explores[id - 1].likes + 1\n                            : explores[id - 1].likes}{\" \"}\n                        likes\n                    </Likes>\n                    <CommentDiv className=\"responsive-div\">\n                        <FontAwesomeIcon icon={faFaceSmile} className=\"icon\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                        <Post onClick={newCommentPost}>Post</Post>\n                    </CommentDiv>\n                </ResponsiveDiv>\n            </section>\n            <Close to=\"/explore\">\n                <FontAwesomeIcon icon={faClose} className=\"icon\" />\n            </Close>\n            {typeof explores[id - 1].explore_data === \"object\" ? (\n                <>\n                    <Prev\n                        onClick={() => {\n                            explorePostCount === 0\n                                ? setExplorePostCount(\n                                      explores[id - 1].explore_data.length - 1\n                                  )\n                                : setExplorePostCount(explorePostCount - 1);\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faAngleLeft} className=\"icon\" />\n                    </Prev>\n                    <Next\n                        onClick={() => {\n                            explorePostCount ===\n                            explores[id - 1].explore_data.length - 1\n                                ? setExplorePostCount(0)\n                                : setExplorePostCount(explorePostCount + 1);\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                    </Next>\n                </>\n            ) : (\n                \"\"\n            )}\n        </Container>\n    );\n}\nconst Container = styled.section`\n    position: fixed;\n    width: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n    padding: 30px 0;\n    @media all and (max-width: 768px) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & .wrapper {\n        display: flex;\n        justify-content: space-between;\n        max-width: 60%;\n\n        @media all and (max-width: 1280px) {\n            max-width: 80%;\n        }\n        @media all and (max-width: 1000px) {\n            max-width: 90%;\n        }\n        @media all and (max-width: 768px) {\n            max-width: 90%;\n        }\n    }\n`;\nconst Left = styled.div`\n    width: 61%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n    overflow: hidden;\n\n    @media all and (max-width: 980px) {\n        width: 50%;\n    }\n    @media all and (max-width: 768px) {\n        display: none;\n    }\n\n    &.responsive-div {\n        @media all and (max-width: 768px) {\n            width: 100%;\n            display: flex;\n        }\n    }\n`;\nconst Right = styled.div`\n    width: 39%;\n    background-color: #fff;\n    padding: 15px;\n    position: relative;\n\n    @media all and (max-width: 980px) {\n        width: 50%;\n    }\n    @media all and (max-width: 768px) {\n        display: none;\n    }\n`;\nconst Head = styled.div`\n    border-bottom: 1px solid #dbdbdb;\n    display: flex;\n    align-items: center;\n    padding: 15px;\n\n    & .icon {\n        margin-left: auto;\n        font-size: 20px;\n    }\n`;\nconst Avatar = styled.div`\n    min-width: 50px;\n    min-height: 50px;\n    max-width: 50px;\n    max-height: 50px;\n    overflow: hidden;\n    border-radius: 50%;\n    margin-right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst Name = styled.h5`\n    font-size: 13px;\n    font-weight: 600;\n    margin-right: 5px;\n    color: #262626;\n`;\nconst NameComment = styled.div`\n    margin-right: 10px;\n    & p {\n        color: #262626;\n        font-weight: 100;\n        font-size: 13px;\n        margin-bottom: 5px;\n        & b {\n            font-size: 14px;\n            font-weight: 600;\n            margin-right: 5px;\n            color: #262626;\n        }\n    }\n`;\nconst Follow = styled.p`\n    color: #0095f6;\n    font-size: 14px;\n    font-weight: 600;\n`;\nconst CommentsUl = styled.div`\n    overflow-y: scroll;\n    height: 75%;\n`;\nconst CommentLi = styled.div`\n    display: flex;\n    margin-bottom: 5px;\n    padding: 15px;\n\n    & .icon {\n        margin-left: auto;\n        margin-right: 0;\n        font-size: 11px;\n        color: #8e8e8e;\n        cursor: pointer;\n        &.liked {\n            color: red;\n        }\n    }\n`;\nconst CommentDiv = styled.div`\n    border-top: 1px solid #efefef;\n    padding: 10px 0;\n    display: flex;\n    position: absolute;\n    width: 90%;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n    height: 50px;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n        margin: 0 auto;\n    }\n\n    & .icon {\n        width: 25px;\n        height: 25px;\n        margin-right: 15px;\n    }\n\n    & input {\n        width: 90%;\n    }\n`;\nconst Post = styled.span`\n    color: #0095f6;\n    font-size: 14px;\n    cursor: pointer;\n`;\nconst ExploreFooter = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 10px 0;\n    position: absolute;\n    width: 90%;\n    bottom: 73px;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n        margin: 0 auto;\n    }\n\n    & .icon {\n        width: 25px;\n        height: 25px;\n        color: #8e8e8e;\n        margin-right: 15px;\n        cursor: pointer;\n\n        &.share {\n            margin-right: 0;\n            margin-left: auto;\n        }\n        &.liked {\n            color: red;\n        }\n        &.shared {\n            color: #000;\n        }\n    }\n`;\nconst Likes = styled.p`\n    font-size: 14px;\n    color: #262626;\n    position: absolute;\n    width: 100%;\n    padding-left: 5%;\n    bottom: 50px;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n    height: 23px;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n    }\n`;\nconst Close = styled(Link)`\n    font-size: 20px;\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    color: #fff;\n`;\nconst Prev = styled.div`\n    position: fixed;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 20px;\n    background-color: #fff;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    & .icon {\n        font-size: 17px;\n    }\n`;\nconst Next = styled.div`\n    position: fixed;\n    top: 50%;\n    transform: translateY(-50%);\n    right: 20px;\n    background-color: #fff;\n    padding: 2px;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    & .icon {\n        font-size: 17px;\n    }\n`;\nconst LikeContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n`;\nconst Time = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    margin-right: 10px;\n`;\nconst Like = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    margin-right: 10px;\n    cursor: pointer;\n`;\nconst Reply = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    cursor: pointer;\n`;\nconst ResponsiveDiv = styled.div`\n    display: none;\n    background-color: #fff;\n    border-radius: 10px;\n    padding: 15px 0;\n    width: 100%;\n\n    @media all and (max-width: 768px) {\n        display: block;\n    }\n`;\n"],"names":["ExploreSingleScreen","id","useParams","height","useWindowDimensions","userActions","useContext","UserContext","useState","likedComments","setLikedComments","newlikedComments","setNewLikedComments","isLiked","setIsLiked","isSaved","setIsSaved","explorePostCount","setExplorePostCount","newComment","setNewComment","newComments","setNewComments","exploreRender","explores","explore_data","includes","src","alt","url","playing","loop","data","newCommentPost","length","comment","user","username","avatar","time","likes","Container","style","minHeight","className","Left","maxHeight","Right","Head","Avatar","profile_image","Name","Follow","icon","faEllipsis","CommentsUl","map","newcomment","CommentLi","NameComment","LikeContainer","Time","Like","Reply","faHeart","onClick","comments","filteredArray","filter","likedComment","ExploreFooter","faComment","faShare","faBookmark","Likes","CommentDiv","faFaceSmile","type","placeholder","value","onChange","e","target","Post","ResponsiveDiv","Close","to","faClose","Prev","faAngleLeft","Next","faAngleRight","styled","Link"],"sourceRoot":""}