{"version":3,"file":"static/js/671.0b7de48e.chunk.js","mappings":"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","sources":["components/screens/VideoSingleScreen.jsx"],"sourcesContent":["import {\n    faBookmark,\n    faComment,\n    faEllipsis,\n    faFaceSmile,\n    faShare,\n    faHeart,\n    faClose,\n    faAngleLeft,\n    faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { UserContext } from \"../../App\";\nimport useWindowDimensions from \"../hooks/UseWindowDimensions\";\n\nexport default function VideoSingleScreen() {\n    const { id } = useParams();\n    const urlId = parseInt(id);\n    const { height } = useWindowDimensions();\n    const { userActions } = useContext(UserContext);\n    const [likedComments, setLikedComments] = useState([]);\n    const [newlikedComments, setNewLikedComments] = useState([]);\n    const [isLiked, setIsLiked] = useState(false);\n    const [isSaved, setIsSaved] = useState(false);\n    const [newComment, setNewComment] = useState(\"\");\n    const [newComments, setNewComments] = useState([]);\n\n    const newCommentPost = () => {\n        setNewComments([\n            ...newComments,\n            {\n                id: newComments.length + 1,\n                comment: newComment,\n                user: userActions.user.username,\n                avatar: userActions.user.avatar,\n                time: \"now\",\n                likes: 0,\n            },\n        ]);\n        setNewComment(\"\");\n    };\n\n    return (\n        <Container style={{ minHeight: height }}>\n            <section className=\"wrapper\">\n                <Left style={{ maxHeight: height - 60, height: height }}>\n                    <ReactPlayer\n                        url={userActions.user.videos[id - 1].video}\n                        playing={true}\n                        loop={true}\n                    />\n                </Left>\n                <Right style={{ maxHeight: height - 60 }}>\n                    <Head>\n                        <Avatar>\n                            <img src={userActions.user.avatar} alt=\"Avatar\" />\n                        </Avatar>\n                        <Name>{userActions.user.username} . </Name>\n                        <FontAwesomeIcon icon={faEllipsis} className=\"icon\" />\n                    </Head>\n                    <CommentsUl>\n                        {newComments.length > 0\n                            ? newComments.map((newcomment) => (\n                                  <CommentLi key={newcomment.id}>\n                                      <Avatar>\n                                          <img\n                                              src={newcomment.avatar}\n                                              alt=\"Avatar\"\n                                          />\n                                      </Avatar>\n                                      <NameComment>\n                                          <p>\n                                              <b>{newcomment.user}</b>{\" \"}\n                                              {newcomment.comment}\n                                          </p>\n                                          <LikeContainer>\n                                              <Time>{newcomment.time}</Time>\n                                              <Like>\n                                                  {newlikedComments.includes(\n                                                      newcomment.id\n                                                  )\n                                                      ? newcomment.likes + 1\n                                                      : newcomment.likes}{\" \"}\n                                                  likes\n                                              </Like>\n                                              <Reply>Reply</Reply>\n                                          </LikeContainer>\n                                      </NameComment>\n                                      <FontAwesomeIcon\n                                          icon={faHeart}\n                                          onClick={() =>\n                                              setNewLikedComments([\n                                                  ...newlikedComments,\n                                                  newcomment.id,\n                                              ])\n                                          }\n                                          className={\n                                              newlikedComments.includes(\n                                                  newcomment.id\n                                              )\n                                                  ? \"icon liked\"\n                                                  : \"icon\"\n                                          }\n                                      />\n                                  </CommentLi>\n                              ))\n                            : \"\"}\n                        {userActions.user.posts[id - 1].comments.map(\n                            (comment) => (\n                                <CommentLi key={comment.id}>\n                                    <Avatar>\n                                        <img\n                                            src={comment.avatar}\n                                            alt=\"Avatar\"\n                                        />\n                                    </Avatar>\n                                    <NameComment>\n                                        <p>\n                                            <b>{comment.name}</b> {comment.body}\n                                        </p>\n                                        <LikeContainer>\n                                            <Like>\n                                                {likedComments.includes(\n                                                    comment.id\n                                                )\n                                                    ? comment.likes + 1\n                                                    : comment.likes}{\" \"}\n                                                likes\n                                            </Like>\n                                            <Reply>Reply</Reply>\n                                        </LikeContainer>\n                                    </NameComment>\n                                    <FontAwesomeIcon\n                                        icon={faHeart}\n                                        onClick={() => {\n                                            if (\n                                                likedComments.includes(\n                                                    comment.id\n                                                )\n                                            ) {\n                                                let filteredArray =\n                                                    likedComments.filter(\n                                                        (likedComment) =>\n                                                            likedComment !==\n                                                            comment.id\n                                                    );\n                                                setLikedComments(filteredArray);\n                                            } else {\n                                                setLikedComments([\n                                                    ...likedComments,\n                                                    comment.id,\n                                                ]);\n                                            }\n                                        }}\n                                        className={\n                                            likedComments.includes(comment.id)\n                                                ? \"icon liked\"\n                                                : \"icon\"\n                                        }\n                                    />\n                                </CommentLi>\n                            )\n                        )}\n                    </CommentsUl>\n                    <ExploreFooter>\n                        <FontAwesomeIcon\n                            icon={faHeart}\n                            className={isLiked ? \"icon liked\" : \"icon\"}\n                            onClick={() => setIsLiked(!isLiked)}\n                        />\n                        <FontAwesomeIcon icon={faComment} className=\"icon\" />\n                        <FontAwesomeIcon icon={faShare} className=\"icon\" />\n                        <FontAwesomeIcon\n                            icon={faBookmark}\n                            className={\n                                isSaved ? \"icon share shared\" : \"icon share\"\n                            }\n                            onClick={() => setIsSaved(!isSaved)}\n                        />\n                    </ExploreFooter>\n                    <Likes>\n                        {isLiked\n                            ? userActions.user.posts[id - 1].likes + 1\n                            : userActions.user.posts[id - 1].likes}{\" \"}\n                        likes\n                    </Likes>\n                    <CommentDiv>\n                        <FontAwesomeIcon icon={faFaceSmile} className=\"icon\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                        <Post onClick={newCommentPost}>Post</Post>\n                    </CommentDiv>\n                </Right>\n                <ResponsiveDiv className=\"responsive-div\">\n                    <Head>\n                        <Avatar>\n                            <img src={userActions.user.avatar} alt=\"Avatar\" />\n                        </Avatar>\n                        <Name>{userActions.user.username} . </Name>\n                        <FontAwesomeIcon icon={faEllipsis} className=\"icon\" />\n                    </Head>\n                    <Left\n                        className=\"responsive-div\"\n                        style={{ maxHeight: height - 60, height: \"500px\" }}\n                    >\n                        <ReactPlayer\n                            url={userActions.user.videos[id - 1].video}\n                            playing={true}\n                            loop={true}\n                        />\n                    </Left>\n                    <ExploreFooter className=\"responsive-div\">\n                        <FontAwesomeIcon\n                            icon={faHeart}\n                            className={isLiked ? \"icon liked\" : \"icon\"}\n                            onClick={() => setIsLiked(!isLiked)}\n                        />\n                        <FontAwesomeIcon icon={faComment} className=\"icon\" />\n                        <FontAwesomeIcon icon={faShare} className=\"icon\" />\n                        <FontAwesomeIcon\n                            icon={faBookmark}\n                            className={\n                                isSaved ? \"icon share shared\" : \"icon share\"\n                            }\n                            onClick={() => setIsSaved(!isSaved)}\n                        />\n                    </ExploreFooter>\n                    <Likes className=\"responsive-div\">\n                        {isLiked\n                            ? userActions.user.posts[id - 1].likes + 1\n                            : userActions.user.posts[id - 1].likes}{\" \"}\n                        likes\n                    </Likes>\n                    <CommentDiv className=\"responsive-div\">\n                        <FontAwesomeIcon icon={faFaceSmile} className=\"icon\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                        <Post onClick={newCommentPost}>Post</Post>\n                    </CommentDiv>\n                </ResponsiveDiv>\n            </section>\n            <Close to={`/${userActions.user.username}/posts`}>\n                <FontAwesomeIcon icon={faClose} className=\"icon\" />\n            </Close>\n            {id > 1 && (\n                <Prev\n                    to={`/${userActions.user.username}/channel/single/${\n                        urlId - 1\n                    }`}\n                >\n                    <FontAwesomeIcon icon={faAngleLeft} className=\"icon\" />\n                </Prev>\n            )}\n            {id < userActions.user.videos.length && (\n                <Next\n                    to={`/${userActions.user.username}/channel/single/${\n                        urlId + 1\n                    }`}\n                >\n                    <FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Next>\n            )}\n        </Container>\n    );\n}\nconst Container = styled.section`\n    position: fixed;\n    width: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n    padding: 30px 0;\n\n    @media all and (max-width: 768px) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & .wrapper {\n        display: flex;\n        justify-content: space-between;\n        max-width: 60%;\n\n        @media all and (max-width: 1280px) {\n            max-width: 80%;\n        }\n        @media all and (max-width: 1000px) {\n            max-width: 90%;\n        }\n        @media all and (max-width: 768px) {\n            max-width: 90%;\n        }\n    }\n`;\nconst Left = styled.div`\n    width: 61%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n    overflow: hidden;\n\n    & div {\n        width: 100% !important;\n        height: 100% !important;\n    }\n\n    @media all and (max-width: 980px) {\n        width: 50%;\n    }\n    @media all and (max-width: 768px) {\n        display: none;\n    }\n\n    &.responsive-div {\n        background-color: #fff;\n        @media all and (max-width: 768px) {\n            width: 100%;\n            display: flex;\n        }\n    }\n`;\nconst Right = styled.div`\n    width: 39%;\n    background-color: #fff;\n    padding: 15px;\n    position: relative;\n    border-left: 1px solid rgb(239, 239, 239);\n\n    @media all and (max-width: 980px) {\n        width: 50%;\n    }\n    @media all and (max-width: 768px) {\n        display: none;\n    }\n`;\nconst Head = styled.div`\n    border-bottom: 1px solid #dbdbdb;\n    display: flex;\n    align-items: center;\n    padding: 15px;\n\n    & .icon {\n        margin-left: auto;\n        font-size: 20px;\n    }\n`;\nconst Avatar = styled.div`\n    min-width: 50px;\n    min-height: 50px;\n    max-width: 50px;\n    max-height: 50px;\n    overflow: hidden;\n    border-radius: 50%;\n    margin-right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst Name = styled.h5`\n    font-size: 13px;\n    font-weight: 600;\n    margin-right: 5px;\n    color: #262626;\n`;\nconst NameComment = styled.div`\n    margin-right: 10px;\n    & p {\n        color: #262626;\n        font-weight: 100;\n        font-size: 13px;\n        margin-bottom: 5px;\n        & b {\n            font-size: 14px;\n            font-weight: 600;\n            margin-right: 5px;\n            color: #262626;\n        }\n    }\n`;\nconst CommentsUl = styled.div`\n    overflow-y: scroll;\n    height: 75%;\n`;\nconst CommentLi = styled.div`\n    display: flex;\n    margin-bottom: 5px;\n    padding: 15px;\n\n    & .icon {\n        margin-left: auto;\n        margin-right: 0;\n        font-size: 11px;\n        color: #8e8e8e;\n        cursor: pointer;\n        &.liked {\n            color: red;\n        }\n    }\n`;\nconst CommentDiv = styled.div`\n    border-top: 1px solid #efefef;\n    padding: 10px 0;\n    display: flex;\n    position: absolute;\n    width: 90%;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n    height: 50px;\n\n    & .icon {\n        width: 25px;\n        height: 25px;\n        margin-right: 15px;\n    }\n\n    & input {\n        width: 90%;\n    }\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n        margin: 0 auto;\n    }\n`;\nconst Post = styled.span`\n    color: #0095f6;\n    font-size: 14px;\n    cursor: pointer;\n`;\nconst ExploreFooter = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 10px 0;\n    position: absolute;\n    width: 90%;\n    bottom: 73px;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n        margin: 0 auto;\n    }\n\n    & .icon {\n        width: 25px;\n        height: 25px;\n        color: #8e8e8e;\n        margin-right: 15px;\n        cursor: pointer;\n\n        &.share {\n            margin-right: 0;\n            margin-left: auto;\n        }\n        &.liked {\n            color: red;\n        }\n        &.shared {\n            color: #000;\n        }\n    }\n`;\nconst Likes = styled.p`\n    font-size: 14px;\n    color: #262626;\n    position: absolute;\n    width: 100%;\n    padding-left: 5%;\n    bottom: 50px;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n    height: 23px;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n    }\n`;\nconst Close = styled(Link)`\n    font-size: 20px;\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    color: #fff;\n`;\nconst Prev = styled(Link)`\n    position: fixed;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 20px;\n    background-color: #fff;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    & .icon {\n        font-size: 17px;\n    }\n`;\nconst Next = styled(Link)`\n    position: fixed;\n    top: 50%;\n    transform: translateY(-50%);\n    right: 20px;\n    background-color: #fff;\n    padding: 2px;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    & .icon {\n        font-size: 17px;\n    }\n`;\nconst LikeContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n`;\nconst Time = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    margin-right: 10px;\n`;\nconst Like = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    margin-right: 10px;\n    cursor: pointer;\n`;\nconst Reply = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    cursor: pointer;\n`;\nconst ResponsiveDiv = styled.div`\n    display: none;\n    background-color: #fff;\n    border-radius: 10px;\n    padding: 15px 0;\n    width: 100%;\n\n    @media all and (max-width: 768px) {\n        display: block;\n    }\n`;\n"],"names":["VideoSingleScreen","id","useParams","urlId","parseInt","height","useWindowDimensions","userActions","useContext","UserContext","useState","likedComments","setLikedComments","newlikedComments","setNewLikedComments","isLiked","setIsLiked","isSaved","setIsSaved","newComment","setNewComment","newComments","setNewComments","newCommentPost","length","comment","user","username","avatar","time","likes","Container","style","minHeight","className","Left","maxHeight","url","videos","video","playing","loop","Right","Head","Avatar","src","alt","Name","icon","faEllipsis","CommentsUl","map","newcomment","CommentLi","NameComment","LikeContainer","Time","Like","includes","Reply","faHeart","onClick","posts","comments","name","body","filteredArray","filter","likedComment","ExploreFooter","faComment","faShare","faBookmark","Likes","CommentDiv","faFaceSmile","type","placeholder","value","onChange","e","target","Post","ResponsiveDiv","Close","to","faClose","Prev","faAngleLeft","Next","faAngleRight","styled","Link"],"sourceRoot":""}