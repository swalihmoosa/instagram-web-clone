{"version":3,"file":"static/js/175.52b43a75.chunk.js","mappings":"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","sources":["components/screens/NewPostSingleScreen.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import {\n    faBookmark,\n    faComment,\n    faEllipsis,\n    faFaceSmile,\n    faShare,\n    faHeart,\n    faClose,\n    faAngleLeft,\n    faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { UserContext } from \"../../App\";\nimport useWindowDimensions from \"../hooks/UseWindowDimensions\";\n\nexport default function NewPostSingleScreen() {\n    const { id } = useParams();\n    const urlId = parseInt(id);\n    const { height } = useWindowDimensions();\n    const { userActions } = useContext(UserContext);\n    const [likedComments, setLikedComments] = useState([]);\n    const [newlikedComments, setNewLikedComments] = useState([]);\n    const [isLiked, setIsLiked] = useState(false);\n    const [isSaved, setIsSaved] = useState(false);\n    const [newComment, setNewComment] = useState(\"\");\n    const [newComments, setNewComments] = useState([]);\n\n    const newPosts = JSON.parse(localStorage.getItem(\"new_posts\"));\n\n    const newCommentPost = () => {\n        setNewComments([\n            ...newComments,\n            {\n                id: newComments.length + 1,\n                comment: newComment,\n                user: userActions.user.username,\n                avatar: userActions.user.avatar,\n                time: \"now\",\n                likes: 0,\n            },\n        ]);\n        setNewComment(\"\");\n    };\n\n    return (\n        <Container style={{ minHeight: height }}>\n            <section className=\"wrapper\">\n                <Left style={{ maxHeight: height - 60, height: height }}>\n                    <img src={newPosts[id - 1].post} alt=\"Post\" />\n                </Left>\n                <Right style={{ maxHeight: height - 60 }}>\n                    <Head>\n                        <Avatar>\n                            <img src={userActions.user.avatar} alt=\"Avatar\" />\n                        </Avatar>\n                        <Name>{userActions.user.username} . </Name>\n                        <FontAwesomeIcon icon={faEllipsis} className=\"icon\" />\n                    </Head>\n                    <CommentsUl>\n                        {newComments.length > 0\n                            ? newComments.map((newcomment) => (\n                                  <CommentLi key={newcomment.id}>\n                                      <Avatar>\n                                          <img\n                                              src={newcomment.avatar}\n                                              alt=\"Avatar\"\n                                          />\n                                      </Avatar>\n                                      <NameComment>\n                                          <p>\n                                              <b>{newcomment.user}</b>{\" \"}\n                                              {newcomment.comment}\n                                          </p>\n                                          <LikeContainer>\n                                              <Time>{newcomment.time}</Time>\n                                              <Like>\n                                                  {newlikedComments.includes(\n                                                      newcomment.id\n                                                  )\n                                                      ? newcomment.likes + 1\n                                                      : newcomment.likes}{\" \"}\n                                                  likes\n                                              </Like>\n                                              <Reply>Reply</Reply>\n                                          </LikeContainer>\n                                      </NameComment>\n                                      <FontAwesomeIcon\n                                          icon={faHeart}\n                                          onClick={() =>\n                                              setNewLikedComments([\n                                                  ...newlikedComments,\n                                                  newcomment.id,\n                                              ])\n                                          }\n                                          className={\n                                              newlikedComments.includes(\n                                                  newcomment.id\n                                              )\n                                                  ? \"icon liked\"\n                                                  : \"icon\"\n                                          }\n                                      />\n                                  </CommentLi>\n                              ))\n                            : \"\"}\n                        {newPosts[id - 1].comments.map((comment) => (\n                            <CommentLi key={comment.id}>\n                                <Avatar>\n                                    <img src={comment.avatar} alt=\"Avatar\" />\n                                </Avatar>\n                                <NameComment>\n                                    <p>\n                                        <b>{comment.name}</b> {comment.body}\n                                    </p>\n                                    <LikeContainer>\n                                        <Like>\n                                            {likedComments.includes(comment.id)\n                                                ? comment.likes + 1\n                                                : comment.likes}{\" \"}\n                                            likes\n                                        </Like>\n                                        <Reply>Reply</Reply>\n                                    </LikeContainer>\n                                </NameComment>\n                                <FontAwesomeIcon\n                                    icon={faHeart}\n                                    onClick={() => {\n                                        if (\n                                            likedComments.includes(comment.id)\n                                        ) {\n                                            let filteredArray =\n                                                likedComments.filter(\n                                                    (likedComment) =>\n                                                        likedComment !==\n                                                        comment.id\n                                                );\n                                            setLikedComments(filteredArray);\n                                        } else {\n                                            setLikedComments([\n                                                ...likedComments,\n                                                comment.id,\n                                            ]);\n                                        }\n                                    }}\n                                    className={\n                                        likedComments.includes(comment.id)\n                                            ? \"icon liked\"\n                                            : \"icon\"\n                                    }\n                                />\n                            </CommentLi>\n                        ))}\n                    </CommentsUl>\n                    <ExploreFooter>\n                        <FontAwesomeIcon\n                            icon={faHeart}\n                            className={isLiked ? \"icon liked\" : \"icon\"}\n                            onClick={() => setIsLiked(!isLiked)}\n                        />\n                        <FontAwesomeIcon icon={faComment} className=\"icon\" />\n                        <FontAwesomeIcon icon={faShare} className=\"icon\" />\n                        <FontAwesomeIcon\n                            icon={faBookmark}\n                            className={\n                                isSaved ? \"icon share shared\" : \"icon share\"\n                            }\n                            onClick={() => setIsSaved(!isSaved)}\n                        />\n                    </ExploreFooter>\n                    <Likes>\n                        {isLiked\n                            ? newPosts[id - 1].likes + 1\n                            : newPosts[id - 1].likes}{\" \"}\n                        likes\n                    </Likes>\n                    <CommentDiv>\n                        <FontAwesomeIcon icon={faFaceSmile} className=\"icon\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                        <Post onClick={newCommentPost}>Post</Post>\n                    </CommentDiv>\n                </Right>\n                <ResponsiveDiv className=\"responsive-div\">\n                    <Head>\n                        <Avatar>\n                            <img src={userActions.user.avatar} alt=\"Avatar\" />\n                        </Avatar>\n                        <Name>{userActions.user.username} . </Name>\n                        <FontAwesomeIcon icon={faEllipsis} className=\"icon\" />\n                    </Head>\n                    <Left\n                        className=\"responsive-div\"\n                        style={{ maxHeight: height - 60, height: \"500px\" }}\n                    >\n                        <img src={newPosts[id - 1].post} alt=\"Post\" />\n                    </Left>\n                    <ExploreFooter className=\"responsive-div\">\n                        <FontAwesomeIcon\n                            icon={faHeart}\n                            className={isLiked ? \"icon liked\" : \"icon\"}\n                            onClick={() => setIsLiked(!isLiked)}\n                        />\n                        <FontAwesomeIcon icon={faComment} className=\"icon\" />\n                        <FontAwesomeIcon icon={faShare} className=\"icon\" />\n                        <FontAwesomeIcon\n                            icon={faBookmark}\n                            className={\n                                isSaved ? \"icon share shared\" : \"icon share\"\n                            }\n                            onClick={() => setIsSaved(!isSaved)}\n                        />\n                    </ExploreFooter>\n                    <Likes className=\"responsive-div\">\n                        {isLiked\n                            ? newPosts[id - 1].likes + 1\n                            : newPosts[id - 1].likes}{\" \"}\n                        likes\n                    </Likes>\n                    <CommentDiv className=\"responsive-div\">\n                        <FontAwesomeIcon icon={faFaceSmile} className=\"icon\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                        <Post onClick={newCommentPost}>Post</Post>\n                    </CommentDiv>\n                </ResponsiveDiv>\n            </section>\n            <Close to={`/${userActions.user.username}/posts`}>\n                <FontAwesomeIcon icon={faClose} className=\"icon\" />\n            </Close>\n            {id > 1 && (\n                <Prev\n                    to={`/${userActions.user.username}/new-posts/single/${\n                        urlId - 1\n                    }`}\n                >\n                    <FontAwesomeIcon icon={faAngleLeft} className=\"icon\" />\n                </Prev>\n            )}\n            {id < newPosts.length && (\n                <Next\n                    to={`/${userActions.user.username}/new-posts/single/${\n                        urlId + 1\n                    }`}\n                >\n                    <FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Next>\n            )}\n            {parseInt(id) === newPosts.length && (\n                <Next to={`/${userActions.user.username}/posts/single/1`}>\n                    <FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Next>\n            )}\n        </Container>\n    );\n}\nconst Container = styled.section`\n    position: fixed;\n    width: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n    padding: 30px 0;\n    @media all and (max-width: 768px) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & .wrapper {\n        display: flex;\n        justify-content: space-between;\n        max-width: 60%;\n\n        @media all and (max-width: 1280px) {\n            max-width: 80%;\n        }\n        @media all and (max-width: 1000px) {\n            max-width: 90%;\n        }\n        @media all and (max-width: 768px) {\n            max-width: 90%;\n        }\n    }\n`;\nconst Left = styled.div`\n    width: 61%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n    overflow: hidden;\n\n    @media all and (max-width: 980px) {\n        width: 50%;\n    }\n    @media all and (max-width: 768px) {\n        display: none;\n    }\n\n    &.responsive-div {\n        background-color: #fff;\n        @media all and (max-width: 768px) {\n            width: 100%;\n            display: flex;\n        }\n    }\n`;\nconst Right = styled.div`\n    width: 39%;\n    background-color: #fff;\n    padding: 15px;\n    position: relative;\n    border-left: 1px solid rgb(239, 239, 239);\n\n    @media all and (max-width: 980px) {\n        width: 50%;\n    }\n    @media all and (max-width: 768px) {\n        display: none;\n    }\n`;\nconst Head = styled.div`\n    border-bottom: 1px solid #dbdbdb;\n    display: flex;\n    align-items: center;\n    padding: 15px;\n\n    & .icon {\n        margin-left: auto;\n        font-size: 20px;\n    }\n`;\nconst Avatar = styled.div`\n    min-width: 50px;\n    min-height: 50px;\n    max-width: 50px;\n    max-height: 50px;\n    overflow: hidden;\n    border-radius: 50%;\n    margin-right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst Name = styled.h5`\n    font-size: 13px;\n    font-weight: 600;\n    margin-right: 5px;\n    color: #262626;\n`;\nconst NameComment = styled.div`\n    margin-right: 10px;\n    & p {\n        color: #262626;\n        font-weight: 100;\n        font-size: 13px;\n        margin-bottom: 5px;\n        & b {\n            font-size: 14px;\n            font-weight: 600;\n            margin-right: 5px;\n            color: #262626;\n        }\n    }\n`;\nconst CommentsUl = styled.div`\n    overflow-y: scroll;\n    height: 75%;\n`;\nconst CommentLi = styled.div`\n    display: flex;\n    margin-bottom: 5px;\n    padding: 15px;\n\n    & .icon {\n        margin-left: auto;\n        margin-right: 0;\n        font-size: 11px;\n        color: #8e8e8e;\n        cursor: pointer;\n        &.liked {\n            color: red;\n        }\n    }\n`;\nconst CommentDiv = styled.div`\n    border-top: 1px solid #efefef;\n    padding: 10px 0;\n    display: flex;\n    position: absolute;\n    width: 90%;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n    height: 50px;\n\n    & .icon {\n        width: 25px;\n        height: 25px;\n        margin-right: 15px;\n    }\n\n    & input {\n        width: 90%;\n    }\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n        margin: 0 auto;\n    }\n`;\nconst Post = styled.span`\n    color: #0095f6;\n    font-size: 14px;\n    cursor: pointer;\n`;\nconst ExploreFooter = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 10px 0;\n    position: absolute;\n    width: 90%;\n    bottom: 73px;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n        margin: 0 auto;\n    }\n\n    & .icon {\n        width: 25px;\n        height: 25px;\n        color: #8e8e8e;\n        margin-right: 15px;\n        cursor: pointer;\n\n        &.share {\n            margin-right: 0;\n            margin-left: auto;\n        }\n        &.liked {\n            color: red;\n        }\n        &.shared {\n            color: #000;\n        }\n    }\n`;\nconst Likes = styled.p`\n    font-size: 14px;\n    color: #262626;\n    position: absolute;\n    width: 100%;\n    padding-left: 5%;\n    bottom: 50px;\n    left: 50%;\n    transform: translate(-50%);\n    background-color: #fff;\n    height: 23px;\n\n    &.responsive-div {\n        position: static;\n        transform: translate(0);\n    }\n`;\nconst Close = styled(Link)`\n    font-size: 20px;\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    color: #fff;\n`;\nconst Prev = styled(Link)`\n    position: fixed;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 20px;\n    background-color: #fff;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    & .icon {\n        font-size: 17px;\n    }\n`;\nconst Next = styled(Link)`\n    position: fixed;\n    top: 50%;\n    transform: translateY(-50%);\n    right: 20px;\n    background-color: #fff;\n    padding: 2px;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    & .icon {\n        font-size: 17px;\n    }\n`;\nconst LikeContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n`;\nconst Time = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    margin-right: 10px;\n`;\nconst Like = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    margin-right: 10px;\n    cursor: pointer;\n`;\nconst Reply = styled.p`\n    color: #8e8e8e !important;\n    font-size: 11px;\n    cursor: pointer;\n`;\nconst ResponsiveDiv = styled.div`\n    display: none;\n    background-color: #fff;\n    border-radius: 10px;\n    padding: 15px 0;\n    width: 100%;\n\n    @media all and (max-width: 768px) {\n        display: block;\n    }\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["NewPostSingleScreen","id","useParams","urlId","parseInt","height","useWindowDimensions","userActions","useContext","UserContext","useState","likedComments","setLikedComments","newlikedComments","setNewLikedComments","isLiked","setIsLiked","isSaved","setIsSaved","newComment","setNewComment","newComments","setNewComments","newPosts","JSON","parse","localStorage","getItem","newCommentPost","length","comment","user","username","avatar","time","likes","Container","style","minHeight","className","Left","maxHeight","src","post","alt","Right","Head","Avatar","Name","icon","faEllipsis","CommentsUl","map","newcomment","CommentLi","NameComment","LikeContainer","Time","Like","includes","Reply","faHeart","onClick","comments","name","body","filteredArray","filter","likedComment","ExploreFooter","faComment","faShare","faBookmark","Likes","CommentDiv","faFaceSmile","type","placeholder","value","onChange","e","target","Post","ResponsiveDiv","Close","to","faClose","Prev","faAngleLeft","Next","faAngleRight","styled","Link","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}